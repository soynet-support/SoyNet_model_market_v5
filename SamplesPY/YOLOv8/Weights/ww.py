from ultralytics import YOLO
import numpy as np
from argparse import ArgumentParser
import sys

def main():
    parser = ArgumentParser()
    parser.add_argument("--model", help="yolov8m, yolov8l, yolov8s, yolov8n, yolov8m-seg", type=str, default='yolov8m')
    parser.add_argument("--load_path", help="path of orignal weight", type=str)
    # parser.add_argument("--weight_path", help="path of saving Soynet weight file", type=str, default='../yolo.weights')
    args = parser.parse_args()



    
    model_name = args.model
    pytorch_weight_path = args.load_path
    soynet_weight_path = "../../../mgmt/weights/%s.weights"%(model_name)

    print(pytorch_weight_path, soynet_weight_path)
    model = YOLO(pytorch_weight_path)
    model.predict(source=[np.zeros((640,480,3), dtype=np.uint8)]) # weight fusion
    weights = model.model.state_dict()

    #weights_list = [(key, value) for (key, value) in weights.items()]
    if 0 :
        for idx, (key,value) in enumerate(weights.items()) :
            wv = value.cpu().data.numpy().flatten()
            print(idx, key, value.shape, wv[:3])
        exit()

    with open(soynet_weight_path, 'wb') as f:
        dumy = np.array([0] * 10, dtype=np.int32)
        dumy[0]=5
        dumy[1]=1
        dumy[2]=1
        dumy.tofile(f)
        ### yolo8 Detection
        weight_list = [(key, value) for (key, value) in weights.items()]

        idx_yolov8s = [[0, 6], [8, 12], [6, 8],
                    [12, 16], [18,26], [16,18],
                    [26,30], [32,40], [30,32],
                    [40,44], [46,50], [44,46],
                    [50,56], [58,62], [56,58],
                    [62,64], [66,70], [64,66],
                    [70,74], [76,80], [74,76],
                    [80,84], [86,90], [84,86],

                    # detect
                    [90,96], [108,114],
                    [96,102], [114,120],
                    [102,108], [120,126],

                    # dfl
                    [126, 127],
                    ]


        idx_yolov8m = [[0, 6], [8, 16], [6, 8],
                    [16, 18],
                    [18, 20], [22, 38], [20, 22],
                    [38, 40],
                    [40, 42], [44, 60], [42, 44],
                    [60, 62],
                    [62, 64], [66, 74], [64, 66],
                    [74, 76], [76, 78],
                    [78, 80], [82, 90], [80, 82],
                    [90, 92], [94, 102], [92, 94],
                    [102, 104],
                    [104, 106], [108, 116], [106, 108],
                    [116, 118],
                    [118, 120], [122, 130], [120, 122],
                    #[167, 175], [175, 181], [181, 187], [187, 193],
                    # detect
                    [130, 136], [148, 154],
                    [136, 142], [154, 160],
                    [142, 148], [160, 166],
                    # dfl
                    [166, 167],
                    ]

        idx_yolov8l = [[0, 6], [8, 20], [6, 8],
                    [20, 24], [26,50], [24,26],
                    [50,54], [56,80], [54,56],
                    [80,84], [86,98], [84,86],
                    [98,104], [106,118], [104,106],
                    [118,120], [122,134], [120,122],
                    [134,138], [140,152], [138,140],
                    [152,156], [158,170], [156,158],

                    # detect
                    [170,176], [188,194],
                    [176,182], [194,200],
                    [182,188], [200,206],

                    # dfl
                    [206, 207],
                    ]

        idx_yolov8n = [[0, 6], [8, 12], [6, 8],
                    [12, 16], [18,26], [16,18],
                    [26,30], [32,40], [30,32],
                    [40,44], [46,50], [44,46],
                    [50,56], [58,62], [56,58],
                    [62,64], [66,70], [64,66],
                    [70,74], [76,80], [74,76],
                    [80,84], [86,90], [84,86],

                    # detect
                    [90,96], [108,114],
                    [96,102], [114,120],
                    [102,108], [120,126],

                    # dfl
                    [126, 127],
                    ]


        ## yolo8 segmentation
        idx_yolov8m_seg = [[0, 6], [8, 16], [6, 8],
                        [16, 20], [22, 38], [20, 22],
                        [38, 42], [44, 60], [42, 44],
                        [60, 64], [66, 74], [64, 66],
                        [74, 80], [82, 90], [80, 82],
                        [90, 92], [94, 102], [92, 94],
                        [102, 106], [108, 116], [106, 108],
                        [116, 120], [122, 130], [120, 122],

                            #segmentation
                        [167,193],


                            # detect
                        [130, 136], [148, 154],
                        [136, 142], [154, 160],
                        [142, 148], [160, 166],
                            # dfl
                        [166, 167],

                        ## etc
                        # [175,193]
                        ]

        if model_name == "yolov8m":
            index = idx_yolov8m
        elif model_name == "yolov8l":
            index = idx_yolov8l
        elif model_name == "yolov8s":
            index = idx_yolov8s
        elif model_name == "yolov8n":
            index = idx_yolov8n
        elif model_name == "yolov8m-seg":
            index = idx_yolov8m_seg
        ii=0
        for i_idx in range(0, len(index)):
            for idx in range(index[i_idx][0], index[i_idx][1]):
                key, w = weight_list[idx]
                if any(skip in key for skip in ('num_batches_tracked',)):
                    continue
                w = w.cpu().data.numpy()
                if w.dtype == np.int64:
                    w = w.astype(np.int32)
                elif w.dtype == np.float64:
                    w = w.astype(np.float32)

                print(ii, idx, key, w.shape, w.flatten()[:3])
                ii += 1
                w.tofile(f)


if __name__ == '__main__':
    main()


"""
0 0 model.0.conv.weight (48, 3, 3, 3) [      8.233      8.2804    -0.52098]
1 1 model.0.conv.bias (48,) [     3.0011      2.6539    0.036012]
2 2 model.1.conv.weight (96, 48, 3, 3) [   0.018536   -0.026915  -0.0091041]
3 3 model.1.conv.bias (96,) [       0.44      2.4915      4.4356]
4 4 model.2.cv1.conv.weight (96, 96, 1, 1) [  -0.017338    0.044322   -0.016515]
5 5 model.2.cv1.conv.bias (96,) [      1.465       1.617     0.46763]
6 8 model.2.m.0.cv1.conv.weight (48, 48, 3, 3) [   0.038417     0.11823   -0.023679]
7 9 model.2.m.0.cv1.conv.bias (48,) [    0.32987      2.3927     -0.7966]
8 10 model.2.m.0.cv2.conv.weight (48, 48, 3, 3) [  -0.058799    0.028827   0.0047147]
9 11 model.2.m.0.cv2.conv.bias (48,) [    0.56425      4.6906   -0.057961]
10 12 model.2.m.1.cv1.conv.weight (48, 48, 3, 3) [  0.0051779    -0.06357   0.0029501]
11 13 model.2.m.1.cv1.conv.bias (48,) [   -0.61715    -0.15422     0.77701]
12 14 model.2.m.1.cv2.conv.weight (48, 48, 3, 3) [    0.04116  -0.0055621    0.018691]
13 15 model.2.m.1.cv2.conv.bias (48,) [   -0.39536      1.9629      1.9273]
14 6 model.2.cv2.conv.weight (96, 192, 1, 1) [ -0.0027126    0.011541   0.0016874]
15 7 model.2.cv2.conv.bias (96,) [   -0.20601    -0.77597      1.5051]
16 16 model.3.conv.weight (192, 96, 3, 3) [   -0.07283    0.058943    0.010615]
17 17 model.3.conv.bias (192,) [   -0.94826    -0.35119    -0.31103]
18 18 model.4.cv1.conv.weight (192, 192, 1, 1) [   0.094017    -0.47849    0.054156]
19 19 model.4.cv1.conv.bias (192,) [    -2.2346    0.054432     -2.0535]
20 22 model.4.m.0.cv1.conv.weight (96, 96, 3, 3) [   0.045214  0.00037741  -0.0084311]
21 23 model.4.m.0.cv1.conv.bias (96,) [    -1.0823      1.4824    -0.53072]
22 24 model.4.m.0.cv2.conv.weight (96, 96, 3, 3) [  -0.037408   -0.017713    0.024496]
23 25 model.4.m.0.cv2.conv.bias (96,) [   -0.91618    0.026643    -0.26875]
24 26 model.4.m.1.cv1.conv.weight (96, 96, 3, 3) [   0.017396     0.01025    0.013666]
25 27 model.4.m.1.cv1.conv.bias (96,) [    0.43762      1.1678   -0.042594]
26 28 model.4.m.1.cv2.conv.weight (96, 96, 3, 3) [  -0.065529    0.026979    0.048815]
27 29 model.4.m.1.cv2.conv.bias (96,) [   -0.56016    -0.85649    -0.65647]
28 30 model.4.m.2.cv1.conv.weight (96, 96, 3, 3) [  0.0059895   -0.040631   0.0067097]
29 31 model.4.m.2.cv1.conv.bias (96,) [     -1.057    -0.41027    -0.53188]
30 32 model.4.m.2.cv2.conv.weight (96, 96, 3, 3) [ -0.0013262      0.1204     0.12253]
31 33 model.4.m.2.cv2.conv.bias (96,) [    -1.6356      1.3394    -0.87669]
32 34 model.4.m.3.cv1.conv.weight (96, 96, 3, 3) [   0.010602   -0.028597  -0.0082641]
33 35 model.4.m.3.cv1.conv.bias (96,) [      3.119     -1.0961    -0.98605]
34 36 model.4.m.3.cv2.conv.weight (96, 96, 3, 3) [   0.046615    0.064813     0.10942]
35 37 model.4.m.3.cv2.conv.bias (96,) [   -0.46054    -0.52887     -1.3984]
36 20 model.4.cv2.conv.weight (192, 576, 1, 1) [  -0.014493   -0.013263  0.00017971]
37 21 model.4.cv2.conv.bias (192,) [   0.011809     -1.0757      0.6984]
38 38 model.5.conv.weight (384, 192, 3, 3) [   0.033479    0.030532    0.027361]
39 39 model.5.conv.bias (384,) [     -0.202    -0.54633     -1.1084]
40 40 model.6.cv1.conv.weight (384, 384, 1, 1) [   -0.12857   -0.045914     0.17608]
41 41 model.6.cv1.conv.bias (384,) [    0.32622    0.092035     -1.2912]
42 44 model.6.m.0.cv1.conv.weight (192, 192, 3, 3) [    0.04069   0.0058968   -0.023295]
43 45 model.6.m.0.cv1.conv.bias (192,) [   -0.60918     -1.1702    -0.72868]
44 46 model.6.m.0.cv2.conv.weight (192, 192, 3, 3) [   0.010183    0.042596    -0.03352]
45 47 model.6.m.0.cv2.conv.bias (192,) [    -1.1247    -0.46455     -1.1267]
46 48 model.6.m.1.cv1.conv.weight (192, 192, 3, 3) [   -0.01309   -0.049052    -0.02863]
47 49 model.6.m.1.cv1.conv.bias (192,) [    -0.5627     -1.0571    -0.87549]
48 50 model.6.m.1.cv2.conv.weight (192, 192, 3, 3) [ -0.0089499   0.0024536    0.029554]
49 51 model.6.m.1.cv2.conv.bias (192,) [     -0.305    -0.51518    -0.98506]
50 52 model.6.m.2.cv1.conv.weight (192, 192, 3, 3) [    0.04823    0.052579    0.020254]
51 53 model.6.m.2.cv1.conv.bias (192,) [   -0.70347     -1.3986    -0.43276]
52 54 model.6.m.2.cv2.conv.weight (192, 192, 3, 3) [  -0.073684    0.022939    0.036533]
53 55 model.6.m.2.cv2.conv.bias (192,) [   -0.95342     -2.1122     -1.3696]
54 56 model.6.m.3.cv1.conv.weight (192, 192, 3, 3) [   0.013794   0.0066075    0.019391]
55 57 model.6.m.3.cv1.conv.bias (192,) [    -1.7406     -1.6611     -2.3098]
56 58 model.6.m.3.cv2.conv.weight (192, 192, 3, 3) [  0.0017094     0.07375    0.023416]
57 59 model.6.m.3.cv2.conv.bias (192,) [    -1.1877    0.085487     -0.5502]
58 42 model.6.cv2.conv.weight (384, 1152, 1, 1) [   0.030285    0.024211   -0.056302]
59 43 model.6.cv2.conv.bias (384,) [   -0.59042    -0.82532    -0.26266]
60 60 model.7.conv.weight (576, 384, 3, 3) [  -0.019351  -0.0013072   -0.012883]
61 61 model.7.conv.bias (576,) [   -0.51245     -1.6105    -0.98747]
62 62 model.8.cv1.conv.weight (576, 576, 1, 1) [  -0.062739   -0.061116    -0.19054]
63 63 model.8.cv1.conv.bias (576,) [   -0.39118    -0.54106    -0.63781]
64 66 model.8.m.0.cv1.conv.weight (288, 288, 3, 3) [  -0.026738   -0.031355   -0.018891]
65 67 model.8.m.0.cv1.conv.bias (288,) [   -0.26564    -0.89274    -0.28184]
66 68 model.8.m.0.cv2.conv.weight (288, 288, 3, 3) [  0.0016865   0.0052665  -0.0020314]
67 69 model.8.m.0.cv2.conv.bias (288,) [   -0.99924     -0.9236    -0.86565]
68 70 model.8.m.1.cv1.conv.weight (288, 288, 3, 3) [  -0.011178  0.00085627  0.00030147]
69 71 model.8.m.1.cv1.conv.bias (288,) [    -1.0838     0.12687     -1.3702]
70 72 model.8.m.1.cv2.conv.weight (288, 288, 3, 3) [ 0.00019824    0.021127  -0.0042753]
71 73 model.8.m.1.cv2.conv.bias (288,) [   -0.27713    -0.40066    -0.91183]
72 64 model.8.cv2.conv.weight (576, 1152, 1, 1) [   0.079867   0.0083666   0.0071341]
73 65 model.8.cv2.conv.bias (576,) [   -0.21302    -0.14756    -0.62294]
74 74 model.9.cv1.conv.weight (288, 576, 1, 1) [   -0.01126   -0.065215   -0.049414]
75 75 model.9.cv1.conv.bias (288,) [    0.86874     0.75313     0.50113]
76 76 model.9.cv2.conv.weight (576, 1152, 1, 1) [  -0.036365    0.045883  -0.0094953]
77 77 model.9.cv2.conv.bias (576,) [    -2.5772     -1.2873    -0.71647]
78 78 model.12.cv1.conv.weight (384, 960, 1, 1) [  -0.046607    0.093955   -0.017684]
79 79 model.12.cv1.conv.bias (384,) [    -1.4834     -2.8745     -1.1926]
80 82 model.12.m.0.cv1.conv.weight (192, 192, 3, 3) [  -0.045295   -0.074212  -0.0076021]
81 83 model.12.m.0.cv1.conv.bias (192,) [   -0.67808     -1.9077     0.46875]
82 84 model.12.m.0.cv2.conv.weight (192, 192, 3, 3) [  -0.019802   -0.009846    0.014469]
83 85 model.12.m.0.cv2.conv.bias (192,) [    -1.5922     -1.1077     0.86988]
84 86 model.12.m.1.cv1.conv.weight (192, 192, 3, 3) [ 0.00052081   -0.090146  -0.0056708]
85 87 model.12.m.1.cv1.conv.bias (192,) [    -2.1827    -0.53161     -2.7785]
86 88 model.12.m.1.cv2.conv.weight (192, 192, 3, 3) [    0.03483   -0.027285  0.00078189]
87 89 model.12.m.1.cv2.conv.bias (192,) [    -1.2345    -0.64428     -1.0212]
88 80 model.12.cv2.conv.weight (384, 768, 1, 1) [  -0.011316   0.0049144   -0.041773]
89 81 model.12.cv2.conv.bias (384,) [   -0.20332     -2.0215     -1.1189]
90 90 model.15.cv1.conv.weight (192, 576, 1, 1) [-0.00038152    0.068579    -0.12952]
91 91 model.15.cv1.conv.bias (192,) [    -0.3023    -0.16201     -1.0244]
92 94 model.15.m.0.cv1.conv.weight (96, 96, 3, 3) [   -0.05775    0.030049    0.034705]
93 95 model.15.m.0.cv1.conv.bias (96,) [   -0.41629     0.41816      1.9311]
94 96 model.15.m.0.cv2.conv.weight (96, 96, 3, 3) [  0.0061399    -0.02635   -0.071889]
95 97 model.15.m.0.cv2.conv.bias (96,) [    -1.1201    -0.52839      -1.465]
96 98 model.15.m.1.cv1.conv.weight (96, 96, 3, 3) [  -0.016619    -0.07543    -0.10966]
97 99 model.15.m.1.cv1.conv.bias (96,) [    -0.7871      -1.096     -1.3683]
98 100 model.15.m.1.cv2.conv.weight (96, 96, 3, 3) [  -0.032739  0.00069085   -0.039042]
99 101 model.15.m.1.cv2.conv.bias (96,) [   -0.78919    -0.44381     -1.0546]
100 92 model.15.cv2.conv.weight (192, 384, 1, 1) [  -0.044725    -0.22139     -0.2317]
101 93 model.15.cv2.conv.bias (192,) [   -0.56804    -0.80349     0.87196]
102 102 model.16.conv.weight (192, 192, 3, 3) [   0.012233   0.0031112   -0.010954]
103 103 model.16.conv.bias (192,) [   -0.68113     -1.1619     0.13566]
104 104 model.18.cv1.conv.weight (384, 576, 1, 1) [ -0.0071962     0.08314   -0.074714]
105 105 model.18.cv1.conv.bias (384,) [  -0.095212     0.24523     -1.3772]
106 108 model.18.m.0.cv1.conv.weight (192, 192, 3, 3) [  -0.061214   0.0035754    0.023583]
107 109 model.18.m.0.cv1.conv.bias (192,) [    -1.4562     -0.9053     -1.2861]
108 110 model.18.m.0.cv2.conv.weight (192, 192, 3, 3) [   0.039251    0.012638    0.026859]
109 111 model.18.m.0.cv2.conv.bias (192,) [    -1.1892    -0.69931     -1.2131]
110 112 model.18.m.1.cv1.conv.weight (192, 192, 3, 3) [   0.077617    0.036272    0.022047]
111 113 model.18.m.1.cv1.conv.bias (192,) [    -1.4164    -0.57429    -0.55457]
112 114 model.18.m.1.cv2.conv.weight (192, 192, 3, 3) [  -0.012127  -0.0077995    0.009691]
113 115 model.18.m.1.cv2.conv.bias (192,) [   -0.86714    -0.28214     -1.2668]
114 106 model.18.cv2.conv.weight (384, 768, 1, 1) [  -0.012965    0.097017    0.048183]
115 107 model.18.cv2.conv.bias (384,) [    -1.2081     -2.1118     -1.2084]
116 116 model.19.conv.weight (384, 384, 3, 3) [  -0.012062   -0.029253   -0.024064]
117 117 model.19.conv.bias (384,) [   -0.90224    -0.15332    -0.93289]
118 118 model.21.cv1.conv.weight (576, 960, 1, 1) [   0.033775    0.010658    -0.08115]
119 119 model.21.cv1.conv.bias (576,) [      -1.11    -0.21339     -1.1484]
120 122 model.21.m.0.cv1.conv.weight (288, 288, 3, 3) [   0.027639  -0.0059709   0.0018355]
121 123 model.21.m.0.cv1.conv.bias (288,) [    0.42041     -1.1872     0.12705]
122 124 model.21.m.0.cv2.conv.weight (288, 288, 3, 3) [  0.0035854   0.0080991     0.01279]
123 125 model.21.m.0.cv2.conv.bias (288,) [   -0.64119      -0.398    -0.27447]
124 126 model.21.m.1.cv1.conv.weight (288, 288, 3, 3) [  -0.010388   -0.022569   -0.038255]
125 127 model.21.m.1.cv1.conv.bias (288,) [   -0.70419    -0.70469    -0.36745]
126 128 model.21.m.1.cv2.conv.weight (288, 288, 3, 3) [   0.030421     0.09486    0.089626]
127 129 model.21.m.1.cv2.conv.bias (288,) [   -0.42324    -0.23447    -0.19123]
128 120 model.21.cv2.conv.weight (576, 1152, 1, 1) [   0.030572     -0.0364    0.096287]
129 121 model.21.cv2.conv.bias (576,) [    0.49708   0.0045878     0.14317]
130 130 model.22.cv2.0.0.conv.weight (64, 192, 3, 3) [   -0.03092   -0.026279   -0.029152]
131 131 model.22.cv2.0.0.conv.bias (64,) [    0.66194     0.49752     0.72395]
132 132 model.22.cv2.0.1.conv.weight (64, 64, 3, 3) [  -0.021858    0.034318   -0.007851]
133 133 model.22.cv2.0.1.conv.bias (64,) [     1.0969      1.4318      1.6179]
134 134 model.22.cv2.0.2.weight (64, 64, 1, 1) [  0.0049629   0.0044899    -0.18896]
135 135 model.22.cv2.0.2.bias (64,) [     2.5566      2.2363      2.1777]
136 148 model.22.cv3.0.0.conv.weight (192, 192, 3, 3) [  -0.014457   -0.014979  -0.0052081]
137 149 model.22.cv3.0.0.conv.bias (192,) [     0.7374    -0.61155     0.31213]
138 150 model.22.cv3.0.1.conv.weight (192, 192, 3, 3) [  -0.010202   -0.089623    -0.10442]
139 151 model.22.cv3.0.1.conv.bias (192,) [     10.047      4.9041      4.6185]
140 152 model.22.cv3.0.2.weight (80, 192, 1, 1) [   0.019745   0.0038185   -0.073303]
141 153 model.22.cv3.0.2.bias (80,) [    -6.9336     -11.664     -9.6719]
142 136 model.22.cv2.1.0.conv.weight (64, 384, 3, 3) [   0.011264    0.012499    0.022421]
143 137 model.22.cv2.1.0.conv.bias (64,) [  -0.046583     -1.8361    -0.34904]
144 138 model.22.cv2.1.1.conv.weight (64, 64, 3, 3) [ -0.0035532   0.0032611  -0.0061007]
145 139 model.22.cv2.1.1.conv.bias (64,) [    0.59692      0.2815      1.9083]
146 140 model.22.cv2.1.2.weight (64, 64, 1, 1) [  0.0028381    0.012222    0.021011]
147 141 model.22.cv2.1.2.bias (64,) [     2.3086      2.1465      1.8662]
148 154 model.22.cv3.1.0.conv.weight (192, 384, 3, 3) [  0.0043729  -0.0079572   -0.002532]
149 155 model.22.cv3.1.0.conv.bias (192,) [   -0.83297    -0.36946    -0.10065]
150 156 model.22.cv3.1.1.conv.weight (192, 192, 3, 3) [   0.012851  -0.0039076    0.031889]
151 157 model.22.cv3.1.1.conv.bias (192,) [     4.2502      2.0515      1.0393]
152 158 model.22.cv3.1.2.weight (80, 192, 1, 1) [  0.0017881    -0.10345     0.16345]
153 159 model.22.cv3.1.2.bias (80,) [    -6.1367     -10.695     -9.7031]
154 142 model.22.cv2.2.0.conv.weight (64, 576, 3, 3) [ -0.0044907  -0.0090549    0.012677]
155 143 model.22.cv2.2.0.conv.bias (64,) [    0.32778     0.63344    0.011541]
156 144 model.22.cv2.2.1.conv.weight (64, 64, 3, 3) [  -0.048757   -0.048293   -0.025722]
157 145 model.22.cv2.2.1.conv.bias (64,) [    0.94609      1.8096      1.4306]
158 146 model.22.cv2.2.2.weight (64, 64, 1, 1) [   0.002636   0.0078583   0.0021915]
159 147 model.22.cv2.2.2.bias (64,) [     1.6143      1.5459      1.5977]
160 160 model.22.cv3.2.0.conv.weight (192, 576, 3, 3) [-0.00070027   0.0011423 -0.00016753]
161 161 model.22.cv3.2.0.conv.bias (192,) [     -0.195    -0.25139    0.059528]
162 162 model.22.cv3.2.1.conv.weight (192, 192, 3, 3) [  -0.026493   -0.031002   -0.023293]
163 163 model.22.cv3.2.1.conv.bias (192,) [     1.4054      2.2676      2.5206]
164 164 model.22.cv3.2.2.weight (80, 192, 1, 1) [   0.010696     0.11432   0.0096741]
165 165 model.22.cv3.2.2.bias (80,) [    -6.2656     -10.008     -9.2109]
166 166 model.22.dfl.conv.weight (1, 16, 1, 1) [          0           1           2]
"""

