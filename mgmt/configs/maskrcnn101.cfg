[model]
name=$MODEL_CODE
make_engine=$MAKE_ENGINE
license_file=$LICENSE_FILE device_id=0
plugin_dir=$PLUGIN_DIR
engine_file=$ENGINE_FILE
weight_file=$WEIGHT_FILE
dict_file=$DICT_FILE
use_cache=0
cache_file=$CACHE_FILE
log_con=1
log_dir=$LOG_DIR
disp_model=1
prec_mode=f32

#[input] refname=ORI_IMG shape=$BATCH_SIZE,$INPUT_HEIGHT,$INPUT_WIDTH,3 dtype=u8
[input] refname=RESIZED_IMG shape=$BATCH_SIZE,$RESIZED_SIZE,3 dtype=u8

[default] type=conv2d kernel=1 stride=1 group=1 pad=0 weight_order=wrbmv bn_eps=0.00001 dilation=1 act=relu
[default] type=pool2d mode=max output_size=1,1 kernel=3 stride=2 pad=1
[default] type=eltwise mode=sum act=relu
 
########################################################################################################################

#Preproc done
#[preproc] input=RESIZED_IMG mode=maskrcnn bgr=1 mean=103.5300,116.2800,123.6750 std=1.0,1.0,1.0
[preproc] input=RESIZED_IMG mode=generic bgr=0 hwc=1 mean=103.5300,116.2800,123.6750 std=1.0 pre_order=0,1 pad_value=0 pad=$TOP,$BOTTOM,$LEFT,$RIGHT #arg=../data/maskrcnn_bigpic.bin
#arg=../data/maskrcnn101.bin #arg=../data/maskrcnn_bus.bin #arg=../data/maskrcnn_bruceLee.bin #arg=../data/maskrcnn_bigpic.bin


#Stem done
[conv2d] channel=64 kernel=7 stride=2 pad=3 
[pool2d] refname=C1

##########################################################################################
#BACKBONE

#res2 #done
#shortcut
[conv2d] channel=256 act=identity input=C1 refname=C2_0

[conv2d] channel=64 input=C1
[conv2d] channel=64 kernel=3 pad=1
[conv2d] channel=256 act=identity
[eltwise] input=*,C2_0 refname=C2_1


[conv2d] channel=64
[conv2d] channel=64 kernel=3 pad=1
[conv2d] channel=256 act=identity
[eltwise] input=*,C2_1 refname=C2_2

[conv2d] channel=64
[conv2d] channel=64 kernel=3 pad=1
[conv2d] channel=256 act=identity
[eltwise] input=*,C2_2 refname=C2

###############################################################################

#res3 done
#shortcut
[conv2d] channel=512 stride=2 act=identity input=C2 refname=C3_0

[conv2d] channel=128 stride=2 input=C2
[conv2d] channel=128 kernel=3 pad=1
[conv2d] channel=512 act=identity
[eltwise] input=*,C3_0 refname=C3_1

[conv2d] channel=128
[conv2d] channel=128 kernel=3 pad=1
[conv2d] channel=512 act=identity
[eltwise] input=*,C3_1 refname=C3_2

[conv2d] channel=128
[conv2d] channel=128 kernel=3 pad=1
[conv2d] channel=512 act=identity
[eltwise] input=*,C3_2 refname=C3_3

[conv2d] channel=128
[conv2d] channel=128 kernel=3 pad=1
[conv2d] channel=512 act=identity
[eltwise] input=*,C3_3 refname=C3


###################################################################################

#res4 done
#shortcut
[conv2d] channel=1024 stride=2 act=identity input=C3 refname=C4_0

[conv2d] channel=256 stride=2 input=C3
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_0 refname=C4_1

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_1 refname=C4_2

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_2 refname=C4_3

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_3 refname=C4_4

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_4 refname=C4_5

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_5 refname=C4_6

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_6 refname=C4_7

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_7 refname=C4_8

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_8 refname=C4_9

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_9 refname=C4_10

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_10 refname=C4_11

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_11 refname=C4_12

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_12 refname=C4_13

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_13 refname=C4_14

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_14 refname=C4_15

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_15 refname=C4_16

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_16 refname=C4_17

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_17 refname=C4_18

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_18 refname=C4_19

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_19 refname=C4_20

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_20 refname=C4_21

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_21 refname=C4_22

[conv2d] channel=256
[conv2d] channel=256 kernel=3 pad=1
[conv2d] channel=1024 act=identity
[eltwise] input=*,C4_22 refname=C4


##############################################################################################

#res5
#shortcut
[conv2d] channel=2048 stride=2 act=identity input=C4 refname=C5_0

[conv2d] channel=512 stride=2 input=C4
[conv2d] channel=512 kernel=3 pad=1
[conv2d] channel=2048 act=identity
[eltwise] input=*,C5_0 refname=C5_1

[conv2d] channel=512
[conv2d] channel=512 kernel=3 pad=1
[conv2d] channel=2048 act=identity
[eltwise] input=*,C5_1 refname=C5_2

[conv2d] channel=512
[conv2d] channel=512 kernel=3 pad=1
[conv2d] channel=2048 act=identity
[eltwise] input=*,C5_2 refname=C5


#############################################################################
#FPN done
[conv2d] channel=256 weight_order=wa act=identity input=C5 refname=F5
[conv2d] channel=256 kernel=3 pad=1 weight_order=wa act=identity refname=P5


[upsample] factor=2 input=F5 refname=F5_UP
[conv2d] channel=256 weight_order=wa act=identity input=C4
[eltwise] input=*,F5_UP act=identity refname=F4
[conv2d] channel=256 kernel=3 pad=1 weight_order=wa act=identity refname=P4


[upsample] factor=2 input=F4 refname=F4_UP
[conv2d] channel=256 weight_order=wa act=identity input=C3
[eltwise] input=*,F4_UP act=identity refname=F3
[conv2d] channel=256 kernel=3 pad=1 weight_order=wa act=identity refname=P3


[upsample] factor=2 input=F3 refname=F3_UP
[conv2d] channel=256 weight_order=wa act=identity input=C2
[eltwise] input=*,F3_UP act=identity refname=F2
[conv2d] channel=256 kernel=3 pad=1 weight_order=wa act=identity refname=P2


[pool2d] kernel=1 pad=0 input=P5 refname=P6

################################################################################
#RPN done

## rpn_head

[conv2d] channel=256 kernel=3 pad=1 weight_order=wa input=P2 refname=R2
[conv2d] channel=3 weight_order=wa act=identity refname=PB2_0 
[trans] order=0,2,3,1
[reshape] shape=$BATCH_SIZE,-1	refname=PB2_1 # objectness

[conv2d] input=R2 channel=12 weight_order=wa act=identity refname=BB2_0
[reshape] shape=$BATCH_SIZE,3,4,-1
[trans] order=0,3,1,2
[reshape] shape=$BATCH_SIZE,-1,4 refname=BB2# delta


[conv2d] channel=256 kernel=3 pad=1 weight_order=wa input=P3 refname=R3
[conv2d] channel=3 weight_order=wa act=identity refname=PB3_0
[trans] order=0,2,3,1
[reshape] shape=$BATCH_SIZE,-1	refname=PB3_1 # objectness


[conv2d] input=R3 channel=12 weight_order=wa act=identity refname=BB3_0
[reshape] shape=$BATCH_SIZE,3,4,-1
[trans] order=0,3,1,2
[reshape] shape=$BATCH_SIZE,-1,4 refname=BB3 # delta


[conv2d] channel=256 kernel=3 pad=1 weight_order=wa input=P4 refname=R4
[conv2d] channel=3 weight_order=wa act=identity refname=PB4_0
[trans] order=0,2,3,1
[reshape] shape=$BATCH_SIZE,-1	refname=PB4_1 # objectness

[conv2d] input=R4 channel=12 weight_order=wa act=identity refname=BB4_0
[reshape] shape=$BATCH_SIZE,3,4,-1
[trans] order=0,3,1,2
[reshape] shape=$BATCH_SIZE,-1,4 refname=BB4 # delta



[conv2d] channel=256 kernel=3 pad=1 weight_order=wa input=P5 refname=R5
[conv2d] channel=3 weight_order=wa act=identity refname=PB5_0
[trans] order=0,2,3,1
[reshape] shape=$BATCH_SIZE,-1	refname=PB5_1 # objectness


[conv2d] input=R5 channel=12 weight_order=wa act=identity refname=BB5_0
[reshape] shape=$BATCH_SIZE,3,4,-1
[trans] order=0,3,1,2
[reshape] shape=$BATCH_SIZE,-1,4 refname=BB5 # delta


[conv2d] channel=256 kernel=3 pad=1 weight_order=wa input=P6 refname=R6
[conv2d] channel=3 weight_order=wa act=identity refname=PB6_0
[trans] order=0,2,3,1
[reshape] shape=$BATCH_SIZE,-1	refname=PB6_1 # objectness

[conv2d] input=R6 channel=12 weight_order=wa act=identity refname=BB6_0
[reshape] shape=$BATCH_SIZE,3,4,-1
[trans] order=0,3,1,2
[reshape] shape=$BATCH_SIZE,-1,4 refname=BB6 # delta


##################################################################################################

# if anchor_generator=1 -> base_anchor 생성
# _grid_anchors : base_anchor를 기준으로 stride, offset, size에 맞춰 anchor 계산
# _decode_proposals : delta 값에 맞춰 anchor regression 계산

[region] input=BB2,PB2_0 mode=maskrcnn bbox_scale=32 bbox_ratio=0.5,1.0,2.0 bbox_stride=4 anchor_generator=1 refname=TB2_0  ###
[region] input=BB3,PB3_0 mode=maskrcnn bbox_scale=64 bbox_ratio=0.5,1.0,2.0 bbox_stride=8 anchor_generator=1 refname=TB3_0
[region] input=BB4,PB4_0 mode=maskrcnn bbox_scale=128 bbox_ratio=0.5,1.0,2.0 bbox_stride=16 anchor_generator=1 refname=TB4_0
[region] input=BB5,PB5_0 mode=maskrcnn bbox_scale=256 bbox_ratio=0.5,1.0,2.0 bbox_stride=32 anchor_generator=1 refname=TB5_0
[region] input=BB6,PB6_0 mode=maskrcnn bbox_scale=512 bbox_ratio=0.5,1.0,2.0 bbox_stride=64 anchor_generator=1 refname=TB6_0

########################################################################################################################


#nms 전 topk 연산
[sortk] input=PB2_1 axis=1 k=1000 refname=TS2,IDX_2 [gather] mode=yolov5c input=TB2_0,IDX_2 refname=TB2 
[sortk] input=PB3_1 axis=1 k=1000 refname=TS3,IDX_3 [gather] mode=yolov5c input=TB3_0,IDX_3 refname=TB3
[sortk] input=PB4_1 axis=1 k=1000 refname=TS4,IDX_4 [gather] mode=yolov5c input=TB4_0,IDX_4 refname=TB4
[sortk] input=PB5_1 axis=1 k=1000 refname=TS5,IDX_5 [gather] mode=yolov5c input=TB5_0,IDX_5 refname=TB5
[sortk] input=PB6_1 axis=1 k=1000 refname=TS6,IDX_6 [gather] mode=yolov5c input=TB6_0,IDX_6 refname=TB6


#nms 전 clip(clamp) 연산
[clamp] input=TB2 mode=maskrcnn value=$RESIZED_SIZE refname=NMS1_BBOX_A0
[clamp] input=TB3 mode=maskrcnn value=$RESIZED_SIZE refname=NMS1_BBOX_B0 
[clamp] input=TB4 mode=maskrcnn value=$RESIZED_SIZE refname=NMS1_BBOX_C0
[clamp] input=TB5 mode=maskrcnn value=$RESIZED_SIZE refname=NMS1_BBOX_D0
[clamp] input=TB6 mode=maskrcnn value=$RESIZED_SIZE refname=NMS1_BBOX_E0



###########################################################################################################################
#TensorRT 

#TensorRT nms API 사용하기 위한 reshape
[reshape] input=TS2 shape=$BATCH_SIZE,-1,1 refname=NMS1_SCORE_A
[reshape] input=TS3 shape=$BATCH_SIZE,-1,1 refname=NMS1_SCORE_B
[reshape] input=TS4 shape=$BATCH_SIZE,-1,1 refname=NMS1_SCORE_C
[reshape] input=TS5 shape=$BATCH_SIZE,-1,1 refname=NMS1_SCORE_D
[reshape] input=TS6 shape=$BATCH_SIZE,-1,1 refname=NMS1_SCORE_E

## offset이 다른 것 끼리 nms -> 2차 nms 부터 진행
[nms] input=NMS1_BBOX_A0,NMS1_SCORE_A mode=trt region_count=1000 class_count=1 count_per_class=$COUNT_PER_CLASS*100 conf_thres=-100 iou_thres=0.7 refname=NMS_A
[nms] input=NMS1_BBOX_B0,NMS1_SCORE_B mode=trt region_count=1000 class_count=1 count_per_class=$COUNT_PER_CLASS*100 conf_thres=-100 iou_thres=0.7 refname=NMS_B
[nms] input=NMS1_BBOX_C0,NMS1_SCORE_C mode=trt region_count=1000 class_count=1 count_per_class=$COUNT_PER_CLASS*100 conf_thres=-100 iou_thres=0.7 refname=NMS_C
[nms] input=NMS1_BBOX_D0,NMS1_SCORE_D mode=trt region_count=1000 class_count=1 count_per_class=$COUNT_PER_CLASS*100 conf_thres=-100 iou_thres=0.7 refname=NMS_D
[nms] input=NMS1_BBOX_E0,NMS1_SCORE_E mode=trt region_count=1000 class_count=1 count_per_class=$COUNT_PER_CLASS*100 conf_thres=-100 iou_thres=0.7 refname=NMS_E

#nms 후 bbox, score 뽑기
[nms_gather] mode=maskrcnn input=NMS1_BBOX_A0,TS2,NMS_A nms_idx=1 class_count=1 refname=NMS_BBOX_A,NMS_SCORE_A
[nms_gather] mode=maskrcnn input=NMS1_BBOX_B0,TS3,NMS_B nms_idx=1 class_count=1 refname=NMS_BBOX_B,NMS_SCORE_B
[nms_gather] mode=maskrcnn input=NMS1_BBOX_C0,TS4,NMS_C nms_idx=1 class_count=1 refname=NMS_BBOX_C,NMS_SCORE_C
[nms_gather] mode=maskrcnn input=NMS1_BBOX_D0,TS5,NMS_D nms_idx=1 class_count=1 refname=NMS_BBOX_D,NMS_SCORE_D
[nms_gather] mode=maskrcnn input=NMS1_BBOX_E0,TS6,NMS_E nms_idx=1 class_count=1 refname=NMS_BBOX_E,NMS_SCORE_E
 
[concat] input=NMS_SCORE_A,NMS_SCORE_B,NMS_SCORE_C,NMS_SCORE_D,NMS_SCORE_E axis=1 refname=SCORE_0
[concat] input=NMS_BBOX_A,NMS_BBOX_B,NMS_BBOX_C,NMS_BBOX_D,NMS_BBOX_E axis=1 refname=BBOX_0

[sortk] input=SCORE_0 axis=1 k=1000 refname=SCORE_1,CONF_IDX_0 [gather] mode=yolov5c input=BBOX_0,CONF_IDX_0 refname=BBOX_1

#ROI HEADS

#box_pooler
[roialign] input=BBOX_1,P2,P3,P4,P5 mode=maskrcnn align_size=7 roi_idx=1



[reshape] shape=$BATCH_SIZE,1000,-1
[dense] hidden=1024 weight_order=wa act=relu
[dense] hidden=1024 weight_order=wa act=relu refname=ROI_HEAD



[dense] input=ROI_HEAD hidden=$CLASS_COUNT+1 weight_order=wa refname=CLS_SCORE ## (1000,81)

[dense] input=ROI_HEAD hidden=$CLASS_COUNT*4 weight_order=wa refname=PROPOSAL_DELTAS ## (1000,320)
# predict_boxes : bbox regression 계산

[region] input=PROPOSAL_DELTAS,BBOX_1 mode=maskrcnn anchor_generator=0 img_size=$RESIZED_SIZE refname=PREDICT_BOXES


[softmax] input=CLS_SCORE axis=-1
[slice] start=0,0,0 shape=$BATCH_SIZE,1000,$CLASS_COUNT refname=SCORE0	#(1,1000,80)
[reshape] input=PREDICT_BOXES shape=$BATCH_SIZE,-1,4 #refname=BBOX # (1,80000,4)
[clamp] mode=maskrcnn value=$RESIZED_SIZE
[reshape] input=PREDICT_BOXES shape=$BATCH_SIZE,-1,$CLASS_COUNT,4 refname=BBOX  # (1,1000,80,4)

#####################################################

### nms_gather를 통해서 bbox, conf, id 뽑기 bbox (1,100,4) id(1,100), conf(1,100)
[nms] input=BBOX,SCORE0 mode=trt region_count=-1 class_count=$CLASS_COUNT count_per_class=$COUNT_PER_CLASS conf_thres=0.5 iou_thres=0.5 refname=NMS2
[nms_gather] mode=maskrcnn input=BBOX,SCORE0,NMS2 nms_idx=2 class_count=$CLASS_COUNT refname=NMS2_BBOX0,NMS2_CONF0,NMS2_ID0
[sortk] input=NMS2_CONF0 axis=1 k=100 refname=NMS2_CONF,CONF_IDX_2
[gather] mode=yolov5c input=NMS2_BBOX0,CONF_IDX_2 refname=NMS2_BBOX
[gather] mode=yolov5c input=NMS2_ID0,CONF_IDX_2 refname=NMS2_ID


#[reshape] input=NMS2_ID0 shape=$BATCH_SIZE,-1,1 refname=NMS2_ID1
#[gather] mode=yolov5c input=NMS2_ID1,CONF_IDX_2 refname=NMS2_ID

#####################################################

#mask_pooler
[roialign] input=NMS2_BBOX,P2,P3,P4,P5 mode=maskrcnn align_size=14 roi_idx=2

[conv2d] channel=256 kernel=3 pad=1 weight_order=wa  
[conv2d] channel=256 kernel=3 pad=1 weight_order=wa  
[conv2d] channel=256 kernel=3 pad=1 weight_order=wa
[conv2d] channel=256 kernel=3 pad=1 weight_order=wa

[deconv2d] channel=256 kernel=2 stride=2 weight_order=wa pad=0 act=relu act_alpha=1.0

[conv2d] channel=80 weight_order=wa act=sigmoid refname=PRED_MASK_LOGITS # (1,100,80,28,28)

#[postproc] mode=maskrcnn input=NMS_SCORE,NMS_OBJID refname=NMS2_CONF_ID

#mask 계산 및 RIP 가공
[mask] input=PRED_MASK_LOGITS,NMS2_CONF,NMS2_ID,NMS2_BBOX mode=maskrcnn arg_vi32=$INPUT_HEIGHT,$INPUT_WIDTH,$RESIZED_SIZE refname=PRED_MASK,FINAL 
# PRED_MASK (1,100,28,28)
## img_y(1,100,720) img_x(1,100,1280) FINAL_BBOX(1,100,4)


[output] refname=FINAL,PRED_MASK [end]



################################################################################################################################################################################################################




